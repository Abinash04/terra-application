{"version":3,"sources":["webpack:///./lib/terra-dev-site/app/how-to.3/show-status-overlays.app.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gMAQMA,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,sBACD,OAAO,cALS,UAKT,OAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,+BADR,+BAGA,2FAAwE,uBAAGC,WAAW,KAAQ,CAC1F,KAAQ,2FAD4D,4BAAxE,qEAE2G,uBAAGA,WAAW,KAAQ,CAC7H,KAAQ,oGAD+F,oCAF3G,mGAKA,yBAAK,0BAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,s0BAgCL,0HAAuG,uBAAGA,WAAW,KAAQ,CACzH,KAAQ,oGAD2F,oCAAvG,yDAGA,gCACE,mBAAGA,WAAW,cAAd,2DAAuF,uBAAGA,WAAW,KAAQ,CACzG,KAAQ,iFAD2E,mBAAvF,KAEkC,uBAAGA,WAAW,KAAQ,CACpD,KAAQ,uFADsB,yBAFlC,MAIyC,uBAAGA,WAAW,KAAQ,CAC3D,KAAQ,8EAD6B,gBAJzC,aAMuC,uBAAGA,WAAW,KAAQ,CACzD,KAAQ,oFAD2B,qBANvC,OAcNJ,EAAWK,gBAAiB","file":"76-c726595df83e3661ffee.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"how-to-show-status-overlays\"\n    }}>{`How to Show Status Overlays`}</h1>\n    <p>{`Status View can be rendered within the framework by rendering an `}<a parentName=\"p\" {...{\n        \"href\": \"/terra-application/application/terra-application/components/application-status-overlay\"\n      }}>{`ApplicationStatusOverlay`}</a>{` component. Status Views will be rendered by the closest ancestor `}<a parentName=\"p\" {...{\n        \"href\": \"/terra-application/application/terra-application/components/application-status-overlay-provider\"\n      }}>{`ApplicationStatusOverlayProvider`}</a>{`. All content rendered within the responding ApplicationStatusOverlayProvider will be overlaid.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React, { useState } from 'react';\nimport ApplicationStatusOverlay from 'terra-application/lib/application-status-overlay';\n\nconst ExampleComponent = () => {\n  const [showStatusOverlay, setShowStatusOverlay] = useState(false);\n\n  return (\n    <div>\n      <p>This component toggles a status view that lasts for 3 seconds.</p>\n      <p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setShowStatusOverlay(true);\n\n            setTimeout(() => {\n              setShowStatusOverlay(false);\n            }, 3000);\n          }}\n        >\n          Show Status View\n        </button>\n      </p>\n      {showStatusOverlay && <ApplicationStatusOverlay message=\"Demo for showing status overlay view\" variant=\"no-data\" />}\n    </div>\n  );\n};\n\nexport default ExampleComponent;\n`}</code></pre>\n    <p>{`Any component that wants to create an status view container for its children can render its own `}<a parentName=\"p\" {...{\n        \"href\": \"/terra-application/application/terra-application/components/application-status-overlay-provider\"\n      }}>{`ApplicationStatusOverlayProvider`}</a>{` to scope status view presentation to that container.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: ApplicationStatusOverlayProviders are provided by `}<a parentName=\"p\" {...{\n          \"href\": \"/terra-application/application/terra-application/components/application-base\"\n        }}>{`ApplicationBase`}</a>{`, `}<a parentName=\"p\" {...{\n          \"href\": \"/terra-application/application/terra-application/components/application-navigation\"\n        }}>{`ApplicationNavigation`}</a>{` , `}<a parentName=\"p\" {...{\n          \"href\": \"/terra-application/application/terra-application/components/modal-manager\"\n        }}>{`ModalManager`}</a>{`, and the `}<a parentName=\"p\" {...{\n          \"href\": \"/terra-application/application/terra-application/components/slide-panel-manager\"\n        }}>{`SlidePanelManager`}</a>{`.`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}