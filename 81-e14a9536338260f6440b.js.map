{"version":3,"sources":["webpack:///./lib/terra-dev-site/app/utilities.2/EventEmitter.app.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"81-e14a9536338260f6440b.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"event-emitter\"\n    }}>{`Event Emitter`}</h1>\n    <p><inlineCode parentName=\"p\">{`EventEmitter`}</inlineCode>{` can be used to create and emit custom events to facilitate communications between the emitting component (emitter) and the listening component (listener). The behavior of the event emitter is similar to the \"pub/sub\" model. When EventEmitter emits an event, listeners that have registered to listen to this event can act upon receiving the event.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`EventEmitter is a singleton that is shared throughout your application. It is important to unsubscribe by removing all listeners to all events when your application is unmounted.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`syntax`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`once`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.once('event-name', listener)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Adds a one-time listener function for the event named `}<inlineCode parentName=\"td\">{`event-name`}</inlineCode>{`. The next time `}<inlineCode parentName=\"td\">{`event-name`}</inlineCode>{` is triggered, this listener is removed and then invoked.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`on`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.on('event-name', listener)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Adds the listener function to the end of the listeners array for the event named `}<inlineCode parentName=\"td\">{`event-name`}</inlineCode>{`. No checks are made to see if the listener has already been added. Multiple calls passing the same combination of `}<inlineCode parentName=\"td\">{`event-name`}</inlineCode>{` and listener will result in the listener being added, and called, multiple times.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addListener`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.addListener('event-name', listener)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Alias to `}<inlineCode parentName=\"td\">{`on`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`off`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.off('event-name', listener)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Removes all specified listeners from the listener array for the event named `}<inlineCode parentName=\"td\">{`event-name`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`removeListener`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.removeListener('event-name', listener)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Alias to `}<inlineCode parentName=\"td\">{`off`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`removeAllListeners`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.removeAllListeners('event-name')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Removes all listeners if not event names are specified, or those of the specified 'event-name'.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`emit`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.emit('event-name', arg1, arg2);`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Synchronously calls each of the listeners registered for the event named 'event-name', in the order they were registered, passing the supplied arguments to each.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventNames`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.eventNames()`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns an array listing the event names for which the emitter has registered listeners. The values in the array will be strings.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`listenerCount`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.listenerCount('event-name')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns the number of listeners listening to the event named 'event-name'.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`listeners`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eventEmitter.listeners('event-name')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns a copy of the array of listeners for the event named 'event-name'.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"once\"\n    }}><inlineCode parentName=\"h3\">{`once`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n\nconst eventEmitter = new EventEmitter();\nlet listenCount = 0;\nconst listener = () => {listenCount += 1;}\n\neventEmitter.once('event-name', listener);\neventEmitter.emit('event-name');  // listenCount == 1\neventEmitter.emit('event-name');  // Ignored: listenCount == 1\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"on\"\n    }}><inlineCode parentName=\"h3\">{`on`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n\nconst eventEmitter = new EventEmitter();\nlet listenCount = 0;\nconst listener = () => {listenCount += 1;}\n\neventEmitter.on('event-name', listener);\neventEmitter.emit('event-name');  // listenCount == 1\neventEmitter.emit('event-name');  // listenCount == 2\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"off\"\n    }}><inlineCode parentName=\"h3\">{`off`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n\nconst eventEmitter = new EventEmitter();\nlet listenCount = 0;\nconst listener = () => {listenCount += 1;}\n\neventEmitter.on('event-name', listener);\neventEmitter.off('event-name', listener);\neventEmitter.emit('event-name');  // Ignored: listenCount == 0\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"removealllisteners\"\n    }}><inlineCode parentName=\"h3\">{`removeAllListeners`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n\nconst eventEmitter = new EventEmitter();\nlet listenCount = 0;\nconst listener = () => {listenCount += 1;}\n\neventEmitter.on('event-name1', listener);\neventEmitter.on('event-name2', listener);\neventEmitter.on('event-name3', listener);\neventEmitter.removeAllListeners();\neventEmitter.emit('event-name1');  // Ignored: listenCount == 0\neventEmitter.emit('event-name2');  // Ignored: listenCount == 0\neventEmitter.emit('event-name3');  // Ignored: listenCount == 0\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"emit\"\n    }}><inlineCode parentName=\"h3\">{`emit`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n\nconst eventEmitter = new EventEmitter();\nlet listenCount = 0;\nconst listener = (count) => {\n  if (count) {\n    listenCount += count;\n  } else {\n    listenCount += 1;\n  }\n\neventEmitter.on('event-name', listener);\neventEmitter.emit('event-name');      // listenCount == 1\neventEmitter.emit('event-name', 50);  // listenCount == 51\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"eventnames\"\n    }}><inlineCode parentName=\"h3\">{`eventNames`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n\nconst eventEmitter = new EventEmitter();\nconst eventNames = ['event-name1', 'event-name2', 'event-name3']\n\neventEmitter.on(eventNames[0], () => {});\neventEmitter.on(eventNames[1], () => {});\neventEmitter.on(eventNames[2], () => {});\n\neventEmitter.eventNames();  // ['event-name1', 'event-name2', 'event-name3']\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"listenercount\"\n    }}><inlineCode parentName=\"h3\">{`listenerCount`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n\nconst eventEmitter = new EventEmitter();\n\neventEmitter.on('event-name1', () => {});\neventEmitter.on('event-name2', () => {});\neventEmitter.on('event-name2', () => {});\n\neventEmitter.listenerCount('event-name1');  // 1\neventEmitter.listenerCount('event-name2');  // 2\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"listeners\"\n    }}><inlineCode parentName=\"h3\">{`listeners`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import EventEmitter from 'terra-application/lib/utils/event-emitter';\n\nconst eventEmitter = new EventEmitter();\n\nconst listener1 = () => {};\nconst listener2 = () => {};\n\neventEmitter.on('event-name', listener1);\neventEmitter.on('event-name', listener2);\n\neventEmitter.listeners('event-name').length;  // 2\neventEmitter.listeners('event-name')[0];      // listener1\neventEmitter.listeners('event-name')[1];      // listener2\n`}</code></pre>\n    <p>{`Follow the `}<a parentName=\"p\" {...{\n        \"href\": \"https://nodejs.org/docs/latest-v10.x/api/events.html\"\n      }}>{`official Node.js documentation`}</a>{` for more examples and other less common APIs.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}